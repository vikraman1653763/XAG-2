{
  "version": 3,
  "sources": ["../../node_modules/split-text-js/SplitTextJS.js"],
  "sourcesContent": ["/**\n * Author: Alexandre Chabeau\n * License: MIT\n * Contact: alexandrechabeau.pro@gmail.com\n * Original repos: https://github.com/saucyspray/split-text-js\n */\nclass SplitTextJS {\n    constructor(_target) {\n        this.result = new Object()\n        this.result.originalText = _target.innerText\n        this.result.splitted = this.split(_target)\n        this.result.words = this.result.splitted.querySelectorAll('.SplitTextJS-wrapper')\n        this.result.chars = this.result.splitted.querySelectorAll('.SplitTextJS-char')\n        this.result.spaces = this.result.splitted.querySelectorAll('.SplitTextJS-spacer')\n        return this.result\n    }\n    createSpan(_class) {\n        let span = document.createElement('span')\n        span.style.display = \"inline-block\"\n        span.className = _class\n        return span\n    }\n    split(_target) {\n        let containerArray = new Array\n        const splittedTarget = _target.innerText.split(' ')\n        let counter = splittedTarget.length\n        splittedTarget.map(word => {\n            const wrapper = this.createSpan('SplitTextJS-wrapper')\n            word.split(/(?!^)/).map(char => {\n                let el = this.createSpan('SplitTextJS-char')\n                el.innerText = char\n                wrapper.appendChild(el)\n            })\n            counter--\n            containerArray.push(wrapper)\n            if (counter > 0) {\n                let space = this.createSpan('SplitTextJS-char SplitTextJS-spacer')\n                space.innerHTML = '&nbsp;'\n                containerArray.push(space)\n            }\n        })\n        _target.innerHTML = ''\n        containerArray.forEach(child => {\n            _target.appendChild(child)\n        })\n        return _target\n    }\n}\nmodule.exports = SplitTextJS;"],
  "mappings": ";;;;;AAAA;AAAA;AAMA,QAAM,cAAN,MAAkB;AAAA,MACd,YAAY,SAAS;AACjB,aAAK,SAAS,IAAI,OAAO;AACzB,aAAK,OAAO,eAAe,QAAQ;AACnC,aAAK,OAAO,WAAW,KAAK,MAAM,OAAO;AACzC,aAAK,OAAO,QAAQ,KAAK,OAAO,SAAS,iBAAiB,sBAAsB;AAChF,aAAK,OAAO,QAAQ,KAAK,OAAO,SAAS,iBAAiB,mBAAmB;AAC7E,aAAK,OAAO,SAAS,KAAK,OAAO,SAAS,iBAAiB,qBAAqB;AAChF,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,WAAW,QAAQ;AACf,YAAI,OAAO,SAAS,cAAc,MAAM;AACxC,aAAK,MAAM,UAAU;AACrB,aAAK,YAAY;AACjB,eAAO;AAAA,MACX;AAAA,MACA,MAAM,SAAS;AACX,YAAI,iBAAiB,IAAI;AACzB,cAAM,iBAAiB,QAAQ,UAAU,MAAM,GAAG;AAClD,YAAI,UAAU,eAAe;AAC7B,uBAAe,IAAI,UAAQ;AACvB,gBAAM,UAAU,KAAK,WAAW,qBAAqB;AACrD,eAAK,MAAM,OAAO,EAAE,IAAI,UAAQ;AAC5B,gBAAI,KAAK,KAAK,WAAW,kBAAkB;AAC3C,eAAG,YAAY;AACf,oBAAQ,YAAY,EAAE;AAAA,UAC1B,CAAC;AACD;AACA,yBAAe,KAAK,OAAO;AAC3B,cAAI,UAAU,GAAG;AACb,gBAAI,QAAQ,KAAK,WAAW,qCAAqC;AACjE,kBAAM,YAAY;AAClB,2BAAe,KAAK,KAAK;AAAA,UAC7B;AAAA,QACJ,CAAC;AACD,gBAAQ,YAAY;AACpB,uBAAe,QAAQ,WAAS;AAC5B,kBAAQ,YAAY,KAAK;AAAA,QAC7B,CAAC;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
